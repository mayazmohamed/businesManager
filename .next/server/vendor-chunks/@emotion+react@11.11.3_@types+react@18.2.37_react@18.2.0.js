"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0";
exports.ids = ["vendor-chunks/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js ***!
  \*************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hoistNonReactStatics)\n/* harmony export */ });\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hoist-non-react-statics */ \"(ssr)/./node_modules/.pnpm/hoist-non-react-statics@3.3.2/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__);\n\n// this file isolates this package that is not tree-shakeable\n// and if this module doesn't actually contain any logic of its own\n// then Rollup just use 'hoist-non-react-statics' directly in other chunks\nvar hoistNonReactStatics = function(targetComponent, sourceComponent) {\n    return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default()(targetComponent, sourceComponent);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGVtb3Rpb24rcmVhY3RAMTEuMTEuM19AdHlwZXMrcmVhY3RAMTguMi4zN19yZWFjdEAxOC4yLjAvbm9kZV9tb2R1bGVzL0BlbW90aW9uL3JlYWN0L19pc29sYXRlZC1obnJzL2Rpc3QvZW1vdGlvbi1yZWFjdC1faXNvbGF0ZWQtaG5ycy5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZEO0FBRTdELDZEQUE2RDtBQUM3RCxtRUFBbUU7QUFDbkUsMEVBQTBFO0FBRTFFLElBQUlDLHVCQUF3QixTQUFVQyxlQUFlLEVBQUVDLGVBQWU7SUFDcEUsT0FBT0gsOERBQXNCQSxDQUFDRSxpQkFBaUJDO0FBQ2pEO0FBRTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BlbW90aW9uK3JlYWN0QDExLjExLjNfQHR5cGVzK3JlYWN0QDE4LjIuMzdfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9yZWFjdC9faXNvbGF0ZWQtaG5ycy9kaXN0L2Vtb3Rpb24tcmVhY3QtX2lzb2xhdGVkLWhucnMuZXNtLmpzP2Q0OTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGhvaXN0Tm9uUmVhY3RTdGF0aWNzJDEgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG4vLyB0aGlzIGZpbGUgaXNvbGF0ZXMgdGhpcyBwYWNrYWdlIHRoYXQgaXMgbm90IHRyZWUtc2hha2VhYmxlXG4vLyBhbmQgaWYgdGhpcyBtb2R1bGUgZG9lc24ndCBhY3R1YWxseSBjb250YWluIGFueSBsb2dpYyBvZiBpdHMgb3duXG4vLyB0aGVuIFJvbGx1cCBqdXN0IHVzZSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnIGRpcmVjdGx5IGluIG90aGVyIGNodW5rc1xuXG52YXIgaG9pc3ROb25SZWFjdFN0YXRpY3MgPSAoZnVuY3Rpb24gKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50KSB7XG4gIHJldHVybiBob2lzdE5vblJlYWN0U3RhdGljcyQxKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50KTtcbn0pO1xuXG5leHBvcnQgeyBob2lzdE5vblJlYWN0U3RhdGljcyBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiaG9pc3ROb25SZWFjdFN0YXRpY3MkMSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/dist/emotion-element-6bdfffb2.esm.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/dist/emotion-element-6bdfffb2.esm.js ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ CacheProvider),\n/* harmony export */   E: () => (/* binding */ Emotion$1),\n/* harmony export */   T: () => (/* binding */ ThemeContext),\n/* harmony export */   _: () => (/* binding */ __unsafe_useEmotionCache),\n/* harmony export */   a: () => (/* binding */ ThemeProvider),\n/* harmony export */   b: () => (/* binding */ withTheme),\n/* harmony export */   c: () => (/* binding */ createEmotionProps),\n/* harmony export */   h: () => (/* binding */ hasOwnProperty),\n/* harmony export */   i: () => (/* binding */ isBrowser),\n/* harmony export */   u: () => (/* binding */ useTheme),\n/* harmony export */   w: () => (/* binding */ withEmotionCache)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.0.3_react-dom@18.2.0_react@18.2.0_sass@1.69.7/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/cache */ \"(ssr)/./node_modules/.pnpm/@emotion+cache@11.11.0/node_modules/@emotion/cache/dist/emotion-cache.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/.pnpm/@babel+runtime@7.23.2/node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(ssr)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n/* harmony import */ var _isolated_hnrs_dist_emotion_react_isolated_hnrs_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js */ \"(ssr)/./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\");\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/utils */ \"(ssr)/./node_modules/.pnpm/@emotion+utils@1.2.1/node_modules/@emotion/utils/dist/emotion-utils.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/serialize */ \"(ssr)/./node_modules/.pnpm/@emotion+serialize@1.1.3/node_modules/@emotion/serialize/dist/emotion-serialize.esm.js\");\n/* harmony import */ var _emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/use-insertion-effect-with-fallbacks */ \"(ssr)/./node_modules/.pnpm/@emotion+use-insertion-effect-with-fallbacks@1.0.1_react@18.2.0/node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.esm.js\");\n\n\n\n\n\n\n\n\n\nvar isBrowser = typeof document !== \"undefined\";\nvar hasOwnProperty = {}.hasOwnProperty;\nvar EmotionCacheContext = /* #__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== \"undefined\" ? /* #__PURE__ */ (0,_emotion_cache__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n    key: \"css\"\n}) : null);\nif (true) {\n    EmotionCacheContext.displayName = \"EmotionCacheContext\";\n}\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(EmotionCacheContext);\n};\nvar withEmotionCache = function withEmotionCache(func) {\n    // $FlowFixMe\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(props, ref) {\n        // the cache will never be null in the browser\n        var cache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(EmotionCacheContext);\n        return func(props, cache, ref);\n    });\n};\nif (!isBrowser) {\n    withEmotionCache = function withEmotionCache(func) {\n        return function(props) {\n            var cache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(EmotionCacheContext);\n            if (cache === null) {\n                // yes, we're potentially creating this on every render\n                // it doesn't actually matter though since it's only on the server\n                // so there will only every be a single render\n                // that could change in the future because of suspense and etc. but for now,\n                // this works and i don't want to optimise for a future thing that we aren't sure about\n                cache = (0,_emotion_cache__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n                    key: \"css\"\n                });\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EmotionCacheContext.Provider, {\n                    value: cache\n                }, func(props, cache));\n            } else {\n                return func(props, cache);\n            }\n        };\n    };\n}\nvar ThemeContext = /* #__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({});\nif (true) {\n    ThemeContext.displayName = \"EmotionThemeContext\";\n}\nvar useTheme = function useTheme() {\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ThemeContext);\n};\nvar getTheme = function getTheme(outerTheme, theme) {\n    if (typeof theme === \"function\") {\n        var mergedTheme = theme(outerTheme);\n        if ( true && (mergedTheme == null || typeof mergedTheme !== \"object\" || Array.isArray(mergedTheme))) {\n            throw new Error(\"[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!\");\n        }\n        return mergedTheme;\n    }\n    if ( true && (theme == null || typeof theme !== \"object\" || Array.isArray(theme))) {\n        throw new Error(\"[ThemeProvider] Please make your theme prop a plain object\");\n    }\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, outerTheme, theme);\n};\nvar createCacheWithTheme = /* #__PURE__ */ (0,_emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(function(outerTheme) {\n    return (0,_emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(function(theme) {\n        return getTheme(outerTheme, theme);\n    });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n    var theme = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ThemeContext);\n    if (props.theme !== theme) {\n        theme = createCacheWithTheme(theme)(props.theme);\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeContext.Provider, {\n        value: theme\n    }, props.children);\n};\nfunction withTheme(Component) {\n    var componentName = Component.displayName || Component.name || \"Component\";\n    var render = function render(props, ref) {\n        var theme = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ThemeContext);\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            theme: theme,\n            ref: ref\n        }, props));\n    }; // $FlowFixMe\n    var WithTheme = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(render);\n    WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n    return (0,_isolated_hnrs_dist_emotion_react_isolated_hnrs_esm_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(WithTheme, Component);\n}\nvar getLastPart = function getLastPart(functionName) {\n    // The match may be something like 'Object.createEmotionProps' or\n    // 'Loader.prototype.render'\n    var parts = functionName.split(\".\");\n    return parts[parts.length - 1];\n};\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n    // V8\n    var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n    if (match) return getLastPart(match[1]); // Safari / Firefox\n    match = /^([A-Za-z0-9$.]+)@/.exec(line);\n    if (match) return getLastPart(match[1]);\n    return undefined;\n};\nvar internalReactFunctionNames = /* #__PURE__ */ new Set([\n    \"renderWithHooks\",\n    \"processChild\",\n    \"finishClassComponent\",\n    \"renderToString\"\n]); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n    return identifier.replace(/\\$/g, \"-\");\n};\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n    if (!stackTrace) return undefined;\n    var lines = stackTrace.split(\"\\n\");\n    for(var i = 0; i < lines.length; i++){\n        var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just \"Error\"\n        if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n        if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n        // uppercase letter\n        if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n    }\n    return undefined;\n};\nvar typePropName = \"__EMOTION_TYPE_PLEASE_DO_NOT_USE__\";\nvar labelPropName = \"__EMOTION_LABEL_PLEASE_DO_NOT_USE__\";\nvar createEmotionProps = function createEmotionProps(type, props) {\n    if ( true && typeof props.css === \"string\" && // check if there is a css declaration\n    props.css.indexOf(\":\") !== -1) {\n        throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n    }\n    var newProps = {};\n    for(var key in props){\n        if (hasOwnProperty.call(props, key)) {\n            newProps[key] = props[key];\n        }\n    }\n    newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n    // the label hasn't already been computed\n    if ( true && !!props.css && (typeof props.css !== \"object\" || typeof props.css.name !== \"string\" || props.css.name.indexOf(\"-\") === -1)) {\n        var label = getLabelFromStackTrace(new Error().stack);\n        if (label) newProps[labelPropName] = label;\n    }\n    return newProps;\n};\nvar Insertion = function Insertion(_ref) {\n    var cache = _ref.cache, serialized = _ref.serialized, isStringTag = _ref.isStringTag;\n    (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.registerStyles)(cache, serialized, isStringTag);\n    var rules = (0,_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_6__.useInsertionEffectAlwaysWithSyncFallback)(function() {\n        return (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.insertStyles)(cache, serialized, isStringTag);\n    });\n    if (!isBrowser && rules !== undefined) {\n        var _ref2;\n        var serializedNames = serialized.name;\n        var next = serialized.next;\n        while(next !== undefined){\n            serializedNames += \" \" + next.name;\n            next = next.next;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"style\", (_ref2 = {}, _ref2[\"data-emotion\"] = cache.key + \" \" + serializedNames, _ref2.dangerouslySetInnerHTML = {\n            __html: rules\n        }, _ref2.nonce = cache.sheet.nonce, _ref2));\n    }\n    return null;\n};\nvar Emotion = /* #__PURE__ */ withEmotionCache(function(props, cache, ref) {\n    var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n    // not passing the registered cache to serializeStyles because it would\n    // make certain babel optimisations not possible\n    if (typeof cssProp === \"string\" && cache.registered[cssProp] !== undefined) {\n        cssProp = cache.registered[cssProp];\n    }\n    var WrappedComponent = props[typePropName];\n    var registeredStyles = [\n        cssProp\n    ];\n    var className = \"\";\n    if (typeof props.className === \"string\") {\n        className = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.getRegisteredStyles)(cache.registered, registeredStyles, props.className);\n    } else if (props.className != null) {\n        className = props.className + \" \";\n    }\n    var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_5__.serializeStyles)(registeredStyles, undefined, react__WEBPACK_IMPORTED_MODULE_0__.useContext(ThemeContext));\n    if ( true && serialized.name.indexOf(\"-\") === -1) {\n        var labelFromStack = props[labelPropName];\n        if (labelFromStack) {\n            serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_5__.serializeStyles)([\n                serialized,\n                \"label:\" + labelFromStack + \";\"\n            ]);\n        }\n    }\n    className += cache.key + \"-\" + serialized.name;\n    var newProps = {};\n    for(var key in props){\n        if (hasOwnProperty.call(props, key) && key !== \"css\" && key !== typePropName && ( false || key !== labelPropName)) {\n            newProps[key] = props[key];\n        }\n    }\n    newProps.ref = ref;\n    newProps.className = className;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof WrappedComponent === \"string\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent, newProps));\n});\nif (true) {\n    Emotion.displayName = \"EmotionCssPropInternal\";\n}\nvar Emotion$1 = Emotion;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/dist/emotion-element-6bdfffb2.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/dist/emotion-react.esm.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/dist/emotion-react.esm.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheProvider: () => (/* reexport safe */ _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   ClassNames: () => (/* binding */ ClassNames),\n/* harmony export */   Global: () => (/* binding */ Global),\n/* harmony export */   ThemeContext: () => (/* reexport safe */ _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.T),\n/* harmony export */   ThemeProvider: () => (/* reexport safe */ _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   __unsafe_useEmotionCache: () => (/* reexport safe */ _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__._),\n/* harmony export */   createElement: () => (/* binding */ jsx),\n/* harmony export */   css: () => (/* binding */ css),\n/* harmony export */   jsx: () => (/* binding */ jsx),\n/* harmony export */   keyframes: () => (/* binding */ keyframes),\n/* harmony export */   useTheme: () => (/* reexport safe */ _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.u),\n/* harmony export */   withEmotionCache: () => (/* reexport safe */ _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.w),\n/* harmony export */   withTheme: () => (/* reexport safe */ _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)\n/* harmony export */ });\n/* harmony import */ var _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./emotion-element-6bdfffb2.esm.js */ \"(ssr)/./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/dist/emotion-element-6bdfffb2.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.0.3_react-dom@18.2.0_react@18.2.0_sass@1.69.7/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/utils */ \"(ssr)/./node_modules/.pnpm/@emotion+utils@1.2.1/node_modules/@emotion/utils/dist/emotion-utils.esm.js\");\n/* harmony import */ var _emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/use-insertion-effect-with-fallbacks */ \"(ssr)/./node_modules/.pnpm/@emotion+use-insertion-effect-with-fallbacks@1.0.1_react@18.2.0/node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/serialize */ \"(ssr)/./node_modules/.pnpm/@emotion+serialize@1.1.3/node_modules/@emotion/serialize/dist/emotion-serialize.esm.js\");\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/cache */ \"(ssr)/./node_modules/.pnpm/@emotion+cache@11.11.0/node_modules/@emotion/cache/dist/emotion-cache.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/.pnpm/@babel+runtime@7.23.2/node_modules/@babel/runtime/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(ssr)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! hoist-non-react-statics */ \"(ssr)/./node_modules/.pnpm/hoist-non-react-statics@3.3.2/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n\n\n\n\nvar pkg = {\n    name: \"@emotion/react\",\n    version: \"11.11.3\",\n    main: \"dist/emotion-react.cjs.js\",\n    module: \"dist/emotion-react.esm.js\",\n    browser: {\n        \"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n    },\n    exports: {\n        \".\": {\n            module: {\n                worker: \"./dist/emotion-react.worker.esm.js\",\n                browser: \"./dist/emotion-react.browser.esm.js\",\n                \"default\": \"./dist/emotion-react.esm.js\"\n            },\n            \"import\": \"./dist/emotion-react.cjs.mjs\",\n            \"default\": \"./dist/emotion-react.cjs.js\"\n        },\n        \"./jsx-runtime\": {\n            module: {\n                worker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n                browser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n                \"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n            },\n            \"import\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs\",\n            \"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n        },\n        \"./_isolated-hnrs\": {\n            module: {\n                worker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n                browser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n                \"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n            },\n            \"import\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs\",\n            \"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n        },\n        \"./jsx-dev-runtime\": {\n            module: {\n                worker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n                browser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n                \"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n            },\n            \"import\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs\",\n            \"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n        },\n        \"./package.json\": \"./package.json\",\n        \"./types/css-prop\": \"./types/css-prop.d.ts\",\n        \"./macro\": {\n            types: {\n                \"import\": \"./macro.d.mts\",\n                \"default\": \"./macro.d.ts\"\n            },\n            \"default\": \"./macro.js\"\n        }\n    },\n    types: \"types/index.d.ts\",\n    files: [\n        \"src\",\n        \"dist\",\n        \"jsx-runtime\",\n        \"jsx-dev-runtime\",\n        \"_isolated-hnrs\",\n        \"types/*.d.ts\",\n        \"macro.*\"\n    ],\n    sideEffects: false,\n    author: \"Emotion Contributors\",\n    license: \"MIT\",\n    scripts: {\n        \"test:typescript\": \"dtslint types\"\n    },\n    dependencies: {\n        \"@babel/runtime\": \"^7.18.3\",\n        \"@emotion/babel-plugin\": \"^11.11.0\",\n        \"@emotion/cache\": \"^11.11.0\",\n        \"@emotion/serialize\": \"^1.1.3\",\n        \"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.1\",\n        \"@emotion/utils\": \"^1.2.1\",\n        \"@emotion/weak-memoize\": \"^0.3.1\",\n        \"hoist-non-react-statics\": \"^3.3.1\"\n    },\n    peerDependencies: {\n        react: \">=16.8.0\"\n    },\n    peerDependenciesMeta: {\n        \"@types/react\": {\n            optional: true\n        }\n    },\n    devDependencies: {\n        \"@definitelytyped/dtslint\": \"0.0.112\",\n        \"@emotion/css\": \"11.11.2\",\n        \"@emotion/css-prettifier\": \"1.1.3\",\n        \"@emotion/server\": \"11.11.0\",\n        \"@emotion/styled\": \"11.11.0\",\n        \"html-tag-names\": \"^1.1.2\",\n        react: \"16.14.0\",\n        \"svg-tag-names\": \"^1.1.1\",\n        typescript: \"^4.5.5\"\n    },\n    repository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n    publishConfig: {\n        access: \"public\"\n    },\n    \"umd:main\": \"dist/emotion-react.umd.min.js\",\n    preconstruct: {\n        entrypoints: [\n            \"./index.js\",\n            \"./jsx-runtime.js\",\n            \"./jsx-dev-runtime.js\",\n            \"./_isolated-hnrs.js\"\n        ],\n        umdName: \"emotionReact\",\n        exports: {\n            envConditions: [\n                \"browser\",\n                \"worker\"\n            ],\n            extra: {\n                \"./types/css-prop\": \"./types/css-prop.d.ts\",\n                \"./macro\": {\n                    types: {\n                        \"import\": \"./macro.d.mts\",\n                        \"default\": \"./macro.d.ts\"\n                    },\n                    \"default\": \"./macro.js\"\n                }\n            }\n        }\n    }\n};\nvar jsx = function jsx(type, props) {\n    var args = arguments;\n    if (props == null || !_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.h.call(props, \"css\")) {\n        // $FlowFixMe\n        return react__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(undefined, args);\n    }\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = _emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.E;\n    createElementArgArray[1] = (0,_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.c)(type, props);\n    for(var i = 2; i < argsLength; i++){\n        createElementArgArray[i] = args[i];\n    } // $FlowFixMe\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(null, createElementArgArray);\n};\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar Global = /* #__PURE__ */ (0,_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.w)(function(props, cache) {\n    if ( true && !warnedAboutCssPropForGlobal && // probably using the custom createElement which\n    // means it will be turned into a className prop\n    // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n    (props.className || props.css)) {\n        console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n        warnedAboutCssPropForGlobal = true;\n    }\n    var styles = props.styles;\n    var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__.serializeStyles)([\n        styles\n    ], undefined, react__WEBPACK_IMPORTED_MODULE_1__.useContext(_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.T));\n    if (!_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.i) {\n        var _ref;\n        var serializedNames = serialized.name;\n        var serializedStyles = serialized.styles;\n        var next = serialized.next;\n        while(next !== undefined){\n            serializedNames += \" \" + next.name;\n            serializedStyles += next.styles;\n            next = next.next;\n        }\n        var shouldCache = cache.compat === true;\n        var rules = cache.insert(\"\", {\n            name: serializedNames,\n            styles: serializedStyles\n        }, cache.sheet, shouldCache);\n        if (shouldCache) {\n            return null;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"style\", (_ref = {}, _ref[\"data-emotion\"] = cache.key + \"-global \" + serializedNames, _ref.dangerouslySetInnerHTML = {\n            __html: rules\n        }, _ref.nonce = cache.sheet.nonce, _ref));\n    } // yes, i know these hooks are used conditionally\n    // but it is based on a constant that will never change at runtime\n    // it's effectively like having two implementations and switching them out\n    // so it's not actually breaking anything\n    var sheetRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef();\n    (0,_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_3__.useInsertionEffectWithLayoutFallback)(function() {\n        var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n        var sheet = new cache.sheet.constructor({\n            key: key,\n            nonce: cache.sheet.nonce,\n            container: cache.sheet.container,\n            speedy: cache.sheet.isSpeedy\n        });\n        var rehydrating = false; // $FlowFixMe\n        var node = document.querySelector('style[data-emotion=\"' + key + \" \" + serialized.name + '\"]');\n        if (cache.sheet.tags.length) {\n            sheet.before = cache.sheet.tags[0];\n        }\n        if (node !== null) {\n            rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n            node.setAttribute(\"data-emotion\", key);\n            sheet.hydrate([\n                node\n            ]);\n        }\n        sheetRef.current = [\n            sheet,\n            rehydrating\n        ];\n        return function() {\n            sheet.flush();\n        };\n    }, [\n        cache\n    ]);\n    (0,_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_3__.useInsertionEffectWithLayoutFallback)(function() {\n        var sheetRefCurrent = sheetRef.current;\n        var sheet = sheetRefCurrent[0], rehydrating = sheetRefCurrent[1];\n        if (rehydrating) {\n            sheetRefCurrent[1] = false;\n            return;\n        }\n        if (serialized.next !== undefined) {\n            // insert keyframes\n            (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_2__.insertStyles)(cache, serialized.next, true);\n        }\n        if (sheet.tags.length) {\n            // if this doesn't exist then it will be null so the style element will be appended\n            var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n            sheet.before = element;\n            sheet.flush();\n        }\n        cache.insert(\"\", serialized, sheet, false);\n    }, [\n        cache,\n        serialized.name\n    ]);\n    return null;\n});\nif (true) {\n    Global.displayName = \"EmotionGlobal\";\n}\nfunction css() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    return (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__.serializeStyles)(args);\n}\nvar keyframes = function keyframes() {\n    var insertable = css.apply(void 0, arguments);\n    var name = \"animation-\" + insertable.name; // $FlowFixMe\n    return {\n        name: name,\n        styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n        anim: 1,\n        toString: function toString() {\n            return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n        }\n    };\n};\nvar classnames = function classnames(args) {\n    var len = args.length;\n    var i = 0;\n    var cls = \"\";\n    for(; i < len; i++){\n        var arg = args[i];\n        if (arg == null) continue;\n        var toAdd = void 0;\n        switch(typeof arg){\n            case \"boolean\":\n                break;\n            case \"object\":\n                {\n                    if (Array.isArray(arg)) {\n                        toAdd = classnames(arg);\n                    } else {\n                        if ( true && arg.styles !== undefined && arg.name !== undefined) {\n                            console.error(\"You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n\" + \"`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.\");\n                        }\n                        toAdd = \"\";\n                        for(var k in arg){\n                            if (arg[k] && k) {\n                                toAdd && (toAdd += \" \");\n                                toAdd += k;\n                            }\n                        }\n                    }\n                    break;\n                }\n            default:\n                {\n                    toAdd = arg;\n                }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\nfunction merge(registered, css, className) {\n    var registeredStyles = [];\n    var rawClassName = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_2__.getRegisteredStyles)(registered, registeredStyles, className);\n    if (registeredStyles.length < 2) {\n        return className;\n    }\n    return rawClassName + css(registeredStyles);\n}\nvar Insertion = function Insertion(_ref) {\n    var cache = _ref.cache, serializedArr = _ref.serializedArr;\n    var rules = (0,_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_3__.useInsertionEffectAlwaysWithSyncFallback)(function() {\n        var rules = \"\";\n        for(var i = 0; i < serializedArr.length; i++){\n            var res = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_2__.insertStyles)(cache, serializedArr[i], false);\n            if (!_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.i && res !== undefined) {\n                rules += res;\n            }\n        }\n        if (!_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.i) {\n            return rules;\n        }\n    });\n    if (!_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.i && rules.length !== 0) {\n        var _ref2;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"style\", (_ref2 = {}, _ref2[\"data-emotion\"] = cache.key + \" \" + serializedArr.map(function(serialized) {\n            return serialized.name;\n        }).join(\" \"), _ref2.dangerouslySetInnerHTML = {\n            __html: rules\n        }, _ref2.nonce = cache.sheet.nonce, _ref2));\n    }\n    return null;\n};\nvar ClassNames = /* #__PURE__ */ (0,_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.w)(function(props, cache) {\n    var hasRendered = false;\n    var serializedArr = [];\n    var css = function css() {\n        if (hasRendered && \"development\" !== \"production\") {\n            throw new Error(\"css can only be used during render\");\n        }\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__.serializeStyles)(args, cache.registered);\n        serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n        (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_2__.registerStyles)(cache, serialized, false);\n        return cache.key + \"-\" + serialized.name;\n    };\n    var cx = function cx() {\n        if (hasRendered && \"development\" !== \"production\") {\n            throw new Error(\"cx can only be used during render\");\n        }\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            args[_key2] = arguments[_key2];\n        }\n        return merge(cache.registered, css, classnames(args));\n    };\n    var content = {\n        css: css,\n        cx: cx,\n        theme: react__WEBPACK_IMPORTED_MODULE_1__.useContext(_emotion_element_6bdfffb2_esm_js__WEBPACK_IMPORTED_MODULE_0__.T)\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Insertion, {\n        cache: cache,\n        serializedArr: serializedArr\n    }), ele);\n});\nif (true) {\n    ClassNames.displayName = \"EmotionClassNames\";\n}\nif (true) {\n    var isBrowser = typeof document !== \"undefined\"; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked\n    var isTestEnv = typeof jest !== \"undefined\" || typeof vi !== \"undefined\";\n    if (isBrowser && !isTestEnv) {\n        // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n        var globalContext = typeof globalThis !== \"undefined\" ? globalThis // eslint-disable-line no-undef\n         : isBrowser ? window : global;\n        var globalKey = \"__EMOTION_REACT_\" + pkg.version.split(\".\")[0] + \"__\";\n        if (globalContext[globalKey]) {\n            console.warn(\"You are loading @emotion/react when it is already loaded. Running \" + \"multiple instances may cause problems. This can happen if multiple \" + \"versions are used, or if multiple builds of the same version are \" + \"used.\");\n        }\n        globalContext[globalKey] = true;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.37_react@18.2.0/node_modules/@emotion/react/dist/emotion-react.esm.js\n");

/***/ })

};
;